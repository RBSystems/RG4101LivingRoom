/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name:	Crestron Electronics
System Name:
System Number:
Programmer:		PAC
Comments:
*/
/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
// #ENABLE_DYNAMIC
#SYMBOL_NAME "Linn DS PreAmp v1.0"
// #HINT ""
#DEFINE_CONSTANT	ciMAXSOURCES	50

#DEFINE_CONSTANT	ciNONE				0
#DEFINE_CONSTANT	ciPOWER				1
#DEFINE_CONSTANT	ciSOURCECOUNT	2
#DEFINE_CONSTANT	ciSOURCENAME	3
#DEFINE_CONSTANT	ciSOURCE			4
#DEFINE_CONSTANT	ciVOLUME			5
#DEFINE_CONSTANT	ciVOLUMEMUTE	6
#DEFINE_CONSTANT	ciVOLUMEMAX		7

#CATEGORY "0"
#DEFAULT_VOLATILE

#ENABLE_STACK_CHECKING
#HELP_BEGIN
	For use inside the Linn DS Preamp v1.0 module only.
#HELP_END
/*******************************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
  (Uncomment and declare inputs and outputs as needed)
*******************************************************************************************/
DIGITAL_INPUT	Initialize, Power_On, Power_Off, Power_Toggle, Volume_Up, Volume_Down,
							Volume_Mute_On, Volume_Mute_Off, Volume_Mute_Toggle, Volume_Changing,
							Get_Source, Source[ciMAXSOURCES];
BUFFER_INPUT	From_Device[1000];

ANALOG_OUTPUT Power_State, Volume_Level, Volume_Mute, Current_Source, Source_Count;
STRING_OUTPUT	To_Device, Source_Name[ciMAXSOURCES];
/*******************************************************************************************
  Global Variables
  (Uncomment and declare global variables as needed)
  Note:  Be sure to initialize all declared STRING variables as needed
         For example, in Function Main: myString = "";
*******************************************************************************************/
INTEGER	iFlag1, iInit, iPollSent, iVolume, iPower, iVolumeMute, iSource, iSourceCount, a,
				iSourceName, iMarker1, iMarker2, iVolumeMax, iSourceReq;
STRING	sTemp[1000], sSourceName[ciMAXSOURCES][50];
/*******************************************************************************************
  Event Handlers
  (Uncomment and declare additional event handlers as needed)
*******************************************************************************************/
PUSH Initialize
{
	if(iInit = 0)
	{
		iInit = 1;
		iPollSent = ciSOURCECOUNT;
		To_Device = "ACTION Ds/Product 1 SourceCount\x0D\x0A";
	}
}

PUSH Power_On
{
	if(iPower = 0)
	{
		To_Device = "ACTION Ds/Product 1 SetStandby \x220\x22\x0D\x0A";
	}
}

PUSH Power_Off
{
	if(iPower = 1)
	{
		To_Device = "ACTION Ds/Product 1 SetStandby \x221\x22\x0D\x0A";
	}
}

PUSH Power_Toggle
{
	if(iPower = 1)
	{
		To_Device = "ACTION Ds/Product 1 SetStandby \x221\x22\x0D\x0A";
	}
	else
	{
		To_Device = "ACTION Ds/Product 1 SetStandby \x220\x22\x0D\x0A";
	}
}

RELEASE Power_On, Power_Off, Power_Toggle
{
	iPollSent = ciPOWER;
	To_Device = "ACTION Ds/Product 1 Standby\x0D\x0A";
}

PUSH Volume_Up
{
	if(iVolume < iVolumeMax)
	{
		To_Device = "ACTION Preamp/Preamp 1 VolumeInc\x0D\x0A";
	}
}

PUSH Volume_Down
{
	if(iVolume > 0)
	{
		To_Device = "ACTION Preamp/Preamp 1 VolumeDec\x0D\x0A";
	}
}

RELEASE Volume_Up, Volume_Down
{
	iPollSent = ciVOLUME;
	To_Device = "ACTION Preamp/Preamp 1 Volume\x0D\x0A";
}

PUSH Volume_Mute_On
{
	if(iVolumeMute = 0)
	{
		To_Device = "ACTION Preamp/Preamp 1 SetMute \x221\x22\x0D\x0A";
	}
}

PUSH Volume_Mute_Off
{
	if(iVolumeMute = 1)
	{
		To_Device = "ACTION Preamp/Preamp 1 SetMute \x220\x22\x0D\x0A";
	}
}

PUSH Volume_Mute_Toggle
{
	if(iVolumeMute = 0)
	{
		To_Device = "ACTION Preamp/Preamp 1 SetMute \x221\x22\x0D\x0A";
	}
	else
	{
		To_Device = "ACTION Preamp/Preamp 1 SetMute \x220\x22\x0D\x0A";
	}
}

RELEASE Volume_Mute_On, Volume_Mute_Off, Volume_Mute_Toggle
{
	iPollSent = ciVOLUMEMUTE;
	To_Device = "ACTION Preamp/Preamp 1 Mute\x0D\x0A";
}

PUSH Source
{
	iSourceReq = getlastmodifiedarrayindex();
	if(iSourceReq <= iSourceCount)
	{
		makestring(To_Device, "ACTION Ds/Product 1 SetSourceIndex \x22%d\x22\x0D\x0A", iSourceReq - 1);
	}
	else
	{
		iSourceReq = ciMAXSOURCES + 1;
	}
}

RELEASE Get_Source
{
	iPollSent = ciSOURCE;
	To_Device = "ACTION Ds/Product 1 SourceIndex\x0D\x0A";
}

CHANGE From_Device
{
	if(iFlag1 = 0)
	{
		iFlag1 = 1;
		while(find("\x0D\x0A", From_Device) > 0)
		{
			sTemp = remove("\x0D\x0A", From_Device);
			if((find("RESPONSE", sTemp) = 1) && (find("\x0D\x0A", sTemp) > (len("RESPONSE") + 1)))
			{
				if(iPollSent = ciPOWER)
				{
					iPollSent = ciNONE;
					if(find("false", sTemp) > 0)
					{
						iPower = 1;
					}
					else if(find("true", sTemp) > 0)
					{
						iPower = 0;
					}
					Power_State = iPower;
					if(iInit = 1)
					{
						iPollSent = ciSOURCE;
						To_Device = "ACTION Ds/Product 1 SourceIndex\x0D\x0A";
					}
				}
				else if(iPollSent = ciSOURCECOUNT)
				{
					iSourceCount = atoi(sTemp);
					Source_Count = iSourceCount;
					iPollSent = ciSOURCENAME;
					iSourceName = 0;
					for(a = 1 to ciMAXSOURCES)
					{
						sSourceName[a] = "Not Available";
						Source_Name[a] = sSourceName[a];
					}
					makestring(To_Device, "ACTION Ds/Product 1 SourceName \x22%d\x22\x0D\x0A", iSourceName);
				}
				else if(iPollSent = ciSOURCENAME)
				{
					iMarker1 = find("\x22", sTemp);
					iMarker2 = find("\x22", sTemp, iMarker1 + 1);
					sSourceName[iSourceName] = mid(sTemp, iMarker1 + 1, iMarker2 - iMarker1 - 1);
					Source_Name[iSourceName + 1] = sSourceName[iSourceName];
					iSourceName = iSourceName + 1;
					if(iSourceName <= (iSourceCount - 1))
					{
						makestring(To_Device, "ACTION Ds/Product 1 SourceName \x22%d\x22\x0D\x0A", iSourceName);
					}
					else if(iInit = 1)
					{
						iSourceName = ciMAXSOURCES + 1;
						iPollSent = ciPOWER;
						To_Device = "ACTION Ds/Product 1 Standby\x0D\x0A";
					}
					else
					{
						iSourceName = ciMAXSOURCES + 1;
						iPollSent = ciNONE;
					}
				}
				else if(iPollSent = ciSOURCE)
				{
					iSource = atoi(sTemp);
					Current_Source = iSource;
					if(iInit = 1)
					{
						iPollSent = ciVOLUMEMAX;
						To_Device = "ACTION Preamp/Preamp 1 VolumeLimit\x0D\x0A";
					}
					else
					{
						iPollSent = ciNONE;
					}
				}
				else if(iPollSent = ciVOLUME)
				{
					iVolume = atoi(sTemp);
					Volume_Level = iVolume * 65535 / iVolumeMax;
					if(Volume_Changing = 0)
					{
						iPollSent = ciVOLUMEMUTE;
						To_Device = "ACTION Preamp/Preamp 1 Mute\x0D\x0A";
					}
				}
				else if(iPollSent = ciVOLUMEMUTE)
				{
					if(find("false", sTemp) > 0)
					{
						iVolumeMute = 0;
					}
					else if(find("true", sTemp) > 0)
					{
						iVolumeMute = 1;
					}
					Volume_Mute = iVolumeMute;
					if(iInit = 1)
					{
						iInit = 0;
					}
					iPollSent = ciNONE;
				}
				else if(iPollSent = ciVOLUMEMAX)
				{
					iVolumeMax = atoi(sTemp);
					iPollSent = ciVOLUME;
					To_Device = "ACTION Preamp/Preamp 1 Volume\x0D\x0A";
				}
			}
			sTemp = "";
		}
		iFlag1 = 0;
	}
}
/*******************************************************************************************
  Main()
  Uncomment and place one-time startup code here
  (This code will get called when the system starts up)
*******************************************************************************************/
Function Main()
{
	WaitForInitializationComplete();
	iFlag1 = 0;
}
